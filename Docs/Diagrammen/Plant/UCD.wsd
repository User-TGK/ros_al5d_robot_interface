@startuml
left to right direction

title
ucd RobotInterface
end title

'Actor(s)
actor :<<external>>\nMotion-planner: as MP


rectangle "<<system>> \n RobotInterface"{
    'Use cases
    usecase (Set goal) as (A)
    usecase (Set preprogrammed goal) as (AA)
    usecase (Set customized goal) as (AB)
    usecase (Execute action) as (B)
    usecase (Emergency break) as (E)
    usecase (Set park) as (sp)
    usecase (Set ready) as (sr)
    usecase (Set straight-up) as (su)

    'Includes, extends and generalizations
    (AA) --|> (A)
    (AB) --|> (A)
    (sp) -down--|>(AA)
    (sr) -down--|>(AA)
    (su) -down--|>(AA)
    B -up--> A : <<include>>

    'Motion planner (the actor that is talking with the interface)
    'Can initiate the following Use Cases
    MP -down-- (sp)
    MP -right-- (sr)
    MP -right-- (su)
    MP -up-- (AB)
    MP -- E
}

rectangle "<<subsystem>> \n SSC-32"{
    'Use cases
    usecase (Set position) as (C)
    usecase (Set DoF 1) as (CA)
    usecase (Set DoF 2) as (CB)
    usecase (Set DoF 3) as (CC)
    usecase (Set DoF 4) as (CD)
    usecase (Set DoF 5) as (CE)
    usecase (Stop all servos) as (S)

    'Includes and extends
    C -up--> CA : <<extend>>
    C -up--> CB : <<extend>>
    C -up--> CC : <<extend>>
    C -up--> CD : <<extend>>
    C -up--> CE : <<extend>>
    B -up--> C : <<extend>>
    E -down--> S : <<include>>
}

rectangle "<<subsystem>> \n LynxMotion AL5D"{
    'Use cases
    usecase (Move to position) as (D)
    usecase (Stop moving) as (ST)

    'Includes and extends
    S --> ST : <<include>>
    C -down--> D : <<include>>
}

@enduml