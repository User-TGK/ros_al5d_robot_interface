// Auto-generated. Do not edit!

// (in-package robot_interface.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class PositionGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.preProgrammed = null;
      this.position = null;
      this.id = null;
      this.maxTime = null;
      this.name = null;
    }
    else {
      if (initObj.hasOwnProperty('preProgrammed')) {
        this.preProgrammed = initObj.preProgrammed
      }
      else {
        this.preProgrammed = false;
      }
      if (initObj.hasOwnProperty('position')) {
        this.position = initObj.position
      }
      else {
        this.position = [];
      }
      if (initObj.hasOwnProperty('id')) {
        this.id = initObj.id
      }
      else {
        this.id = [];
      }
      if (initObj.hasOwnProperty('maxTime')) {
        this.maxTime = initObj.maxTime
      }
      else {
        this.maxTime = 0;
      }
      if (initObj.hasOwnProperty('name')) {
        this.name = initObj.name
      }
      else {
        this.name = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type PositionGoal
    // Serialize message field [preProgrammed]
    bufferOffset = _serializer.bool(obj.preProgrammed, buffer, bufferOffset);
    // Serialize message field [position]
    bufferOffset = _arraySerializer.int16(obj.position, buffer, bufferOffset, null);
    // Serialize message field [id]
    bufferOffset = _arraySerializer.uint16(obj.id, buffer, bufferOffset, null);
    // Serialize message field [maxTime]
    bufferOffset = _serializer.uint64(obj.maxTime, buffer, bufferOffset);
    // Serialize message field [name]
    bufferOffset = _serializer.string(obj.name, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type PositionGoal
    let len;
    let data = new PositionGoal(null);
    // Deserialize message field [preProgrammed]
    data.preProgrammed = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [position]
    data.position = _arrayDeserializer.int16(buffer, bufferOffset, null)
    // Deserialize message field [id]
    data.id = _arrayDeserializer.uint16(buffer, bufferOffset, null)
    // Deserialize message field [maxTime]
    data.maxTime = _deserializer.uint64(buffer, bufferOffset);
    // Deserialize message field [name]
    data.name = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += 2 * object.position.length;
    length += 2 * object.id.length;
    length += object.name.length;
    return length + 21;
  }

  static datatype() {
    // Returns string type for a message object
    return 'robot_interface/PositionGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '86420113f433e06cdfdcc61a54beacb3';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    bool     preProgrammed
    int16[]  position 
    uint16[] id
    uint64   maxTime
    string   name
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new PositionGoal(null);
    if (msg.preProgrammed !== undefined) {
      resolved.preProgrammed = msg.preProgrammed;
    }
    else {
      resolved.preProgrammed = false
    }

    if (msg.position !== undefined) {
      resolved.position = msg.position;
    }
    else {
      resolved.position = []
    }

    if (msg.id !== undefined) {
      resolved.id = msg.id;
    }
    else {
      resolved.id = []
    }

    if (msg.maxTime !== undefined) {
      resolved.maxTime = msg.maxTime;
    }
    else {
      resolved.maxTime = 0
    }

    if (msg.name !== undefined) {
      resolved.name = msg.name;
    }
    else {
      resolved.name = ''
    }

    return resolved;
    }
};

module.exports = PositionGoal;
